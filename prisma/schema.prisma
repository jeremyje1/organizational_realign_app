// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "auth"]
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  name          String?
  organizations Organization[] @relation("OrganizationOwner")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@schema("auth")
}

model Organization {
  id          String   @id @default(uuid())
  name        String
  description String?
  owner       User     @relation("OrganizationOwner", fields: [ownerId], references: [id])
  ownerId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@schema("public")
}

/// Stores each survey instance a user completes
model Survey {
  id          String    @id @default(uuid())
  userId      String    @map("user_id")
  startedAt   DateTime  @default(now()) @map("started_at")
  completedAt DateTime? @map("completed_at")

  // Relations
  answers Answer[]

  @@index([userId])
  @@schema("public")
}

/// Stores individual answers tied to a Survey
model Answer {
  id        String   @id @default(uuid())
  surveyId  String   @map("survey_id")
  question  String
  valueInt  Int?
  valueText String?

  // Relations
  survey Survey @relation(fields: [surveyId], references: [id])

  @@index([surveyId])
  @@schema("public")
}

/// Existing Supabase questions table (managed outside Prisma)
model Question {
  id       Int     @id
  section  Int?
  prompt   String?
  kind     String?
  scale    Int?

  @@map("questions")
  @@schema("public")
  @@ignore
}

/// Supabase's internal migration history table (leave untouched)
model SchemaMigration {
  version     String   @id
  inserted_at DateTime

  @@map("schema_migrations")
  @@schema("public")
  @@ignore
}